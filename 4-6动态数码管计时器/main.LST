C51 COMPILER V9.57.0.0   MAIN                                                              11/22/2023 16:57:12 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          --------流程----------
   3          1.先写好数码管对应字符数组，数码管位置对应数组
   4          2.初始化P0，P2
   5          3.定时器判断时间
   6          4.变灯
   7          5.灯咋变：
   8            对秒表上的时间取整或取余，动态扫描（延时人眼看不到的范围）
   9          ****6.尽可能不要对已定义的位或引脚反复操作！！！！
  10          -----------------------
  11          */
  12          #include <REGX52.H>
  13          //对类型重新定义，
  14          typedef unsigned int u16;
  15          typedef unsigned char u8;
  16          
  17          
  18          //定义引脚，保持这个习惯，别直接对引脚操作
  19          sbit ADDR0 = P2^4;
  20          sbit ADDR1 = P2^3;
  21          sbit ADDR2 = P2^2;
  22          
  23          u8 i;
  24          u16 clock =59999;
  25          
  26          //定义数码管显示0~9的数组
  27          u8 X[]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0X7D,0x07,0x7F,0x6F};
  28          
  29          //建立临时数组来储存数码管要显示值，数组多定义一个，避免越界
  30          u8 real[]={0x00,0x00,0x00,0x00,0x00,0x00};
  31          
  32          //软件延时用来消影，注意不能用定时器消影，因为定时器是要占用寄存器的
  33          void Delay(u8 xms)  //@11.0592MHz
  34          {
  35   1        while(xms)
  36   1        {
  37   2          unsigned char i, j;
  38   2      
  39   2          
  40   2          i = 2;
  41   2          j = 199;
  42   2          do
  43   2          {
  44   3            while (--j);
  45   3          } while (--i);
  46   2          xms--;
  47   2        }
  48   1      }
  49          
  50          //定时器初始化函数
  51          void time_init()
  52          {
  53   1        TMOD &= 0xF0;//调用定时器0,注意位操作最好不要直接赋值
  54   1        TMOD |= 0x01;
  55   1        TL0 = 0x18;  //0xFC18到溢出约为1ms；
C51 COMPILER V9.57.0.0   MAIN                                                              11/22/2023 16:57:12 PAGE 2   

  56   1        TH0 = 0xFC;
  57   1        TF0 = 0; //清除TF0标志
  58   1        TR0=1;  //开始计时
  59   1        ET0 = 1;  //使能中断
  60   1        EA = 1;
  61   1        PT0 = 0;
  62   1        
  63   1      }
  64          
  65          //定时器中断函数
  66          void time0() interrupt 1
  67          {
  68   1        static u16 count; //静态数据，发在函数内类似于局部变量，反正在函数里不受外界干扰
  69   1        TL0 = 0x18;  //0xFC18到溢出约为1ms；
  70   1        TH0 = 0xFC;
  71   1        count++;                  //count 来记录定时器经历了多少次1ms
  72   1        if(count==1000) //定时1s
  73   1        {
  74   2          count=0;
  75   2          clock--;
  76   2        }
  77   1      }
  78          
  79          
  80          //显示数码管函数
  81          void display()
  82          {
  83   1        real[0]=X[clock/10000];  //对定义的倒计时取各各位
  84   1        real[1]=X[clock/1000%10];
  85   1        real[2]=X[clock/100%10];
  86   1        real[3]=X[clock/10%10];
  87   1        real[4]=X[clock%10];
  88   1        for(i=0;i<5;i++){   //显示数码管
  89   2            switch(i)
  90   2          {
  91   3            case 0:ADDR0=1;ADDR1=1;ADDR2=1;P0=real[0];Delay(1);break;
  92   3            case 1:ADDR0=1;ADDR1=1;ADDR2=0;P0=real[1];Delay(1);break;
  93   3            case 2:ADDR0=1;ADDR1=0;ADDR2=1;P0=real[2];Delay(1);break;
  94   3            case 3:ADDR0=1;ADDR1=0;ADDR2=0;P0=real[3];Delay(1);break;
  95   3            case 4:ADDR0=0;ADDR1=1;ADDR2=1;P0=real[4];Delay(1);break;
  96   3            default:break;  
  97   3          }
  98   2          P0=0x00; //消影
  99   2        }
 100   1        
 101   1          
 102   1      }
 103            
 104          void main()
 105          {
 106   1        time_init();
 107   1        P0=0x00;
 108   1        while(1){
 109   2          display();
 110   2        }
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   MAIN                                                              11/22/2023 16:57:12 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
